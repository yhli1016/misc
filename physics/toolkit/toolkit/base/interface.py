"""Functions for writting structures for different programs."""

import toolkit.base.cif as cif
from toolkit.base.species import PERIODIC_TABLE


def write_qe(lattice_vectors, atom_symbols, atom_coordinates, out_file):
    # Write lattice vectors
    out_file.write("CELL_PARAMETERS angstrom\n")
    for row in lattice_vectors:
        out_file.write("%14.9f%14.9f%14.9f\n" % (row[0], row[1], row[2]))

    # Write atomic coordinates
    out_file.write("ATOMIC_POSITIONS crystal\n")
    for i, symbol in enumerate(atom_symbols):
        out_file.write("%4s" % symbol)
        for v in atom_coordinates[i]:
            out_file.write("%14.9f" % v)
        out_file.write("\n")


def write_siesta(lattice_vectors, atom_symbols, atom_coordinates, out_file):
    # Write atomic types information
    out_file.write("%block ChemicalSpeciesLabel\n")
    atom_types = cif.get_atom_types(atom_symbols)
    for atom_type in atom_types:
        out_file.write("%4d%4d%4s\n" % (atom_types.index(atom_type)+1,
                                        PERIODIC_TABLE.index(atom_type)+1, atom_type))
    out_file.write("%endblock ChemicalSpeciesLabel\n\n")

    # Write lattice vectors
    out_file.write("LatticeConstant 1.0 Ang\n")
    out_file.write("%block LatticeVectors\n")
    for row in lattice_vectors:
        out_file.write("%14.9f%14.9f%14.9f\n" % (row[0], row[1], row[2]))
    out_file.write("%endblock LatticeVectors\n\n")

    # Write atomic coordinates
    out_file.write("AtomicCoordinatesFormat Fractional\n")
    out_file.write("%block AtomicCoordinatesAndAtomicSpecies\n")
    for i, atom_type in enumerate(atom_symbols):
        for v in atom_coordinates[i]:
            out_file.write("%14.9f" % v)
        out_file.write("%4s\n" % (atom_types.index(atom_type)+1))
    out_file.write("%endblock AtomicCoordinatesAndAtomicSpecies\n")


def write_vasp(lattice_vectors, atom_symbols, atom_coordinates, out_file):
    # Write header
    out_file.write("Generated by cif2x.py\n")
    out_file.write("1.0\n")

    # Write lattice vectors
    for row in lattice_vectors:
        out_file.write("%14.9f%14.9f%14.9f\n" % (row[0], row[1], row[2]))

    # Write atomic types and number of each type
    atom_types = cif.get_atom_types(atom_symbols)
    natom_per_type = cif.get_natom_per_type(atom_symbols)
    for atom_type in atom_types:
        out_file.write("%4s" % atom_type)
    out_file.write("\n")
    for atom_type in atom_types:
        out_file.write("%4d" % natom_per_type[atom_type])
    out_file.write("\n")

    # Write atomic coordinates
    out_file.write("Direct\n")
    for row in atom_coordinates:
        out_file.write("%14.9f%14.9f%14.9f\n" % (row[0], row[1], row[2]))
